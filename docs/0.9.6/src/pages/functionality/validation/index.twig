{% extends "../../../layout.twig" %}

{% set page_title = 'Validation' %}
{% set page_slug = '/functionality/' %}

{% block page %}
    <h1><a href="#validation" id="validation" class="anchor"></a>{{page_title}}</h1>
    <p>Validate a submitted value before continuing the form flow using javascript.</p>
	<ul>
		<li>OBS. eval is used.</li>
		<li>Asyncronous, so a value can be validated through a server</li>
		<li>three parameters is passed to the method
			<ul>
				<li>dto: FlowDTO</li>
				<li>success: () => void //callback</li>
				<li>error: (optionalErrorMessage?: string) => void //callback</li>
			</ul>
		</li>
	</ul>
    <pre><code class="language-html" data-lang="html">&lt;input type="text" cf-validation="window.lastnameCheck" /></code></pre>
    <pre><code class="language-javascript" data-lang="html">var lastnameCheck = function(dto, success, error){
    console.log("testValidation, dto:", dto, success, error);
    if(dto.text.toLowerCase().indexOf("holmes") != -1)
        return success();
    return error();
};</code></pre>

	<h2><a href="#validate-using-flowstepcallback" id="validate-using-flowstepcallback" class="anchor"></a>Using flowStepCallback</h2>
	<pre><code class="language-javascript" data-lang="html">var conversationalForm = window.cf.ConversationalForm.startTheConversation({
    formEl: document.getElementById("form"),
    context: document.getElementById("cf-context"),
    flowStepCallback: function(dto, success, error){
        
        if(dto.tag.id == "firstname"){
            if(dto.tag.value.toLowerCase() === "sherlock"){
                return success();
            }else{
                return error();
            }
            //conversationalForm.stop("Stopping form, but added value");
        }else if(dto.tag.name == "gender"){
            if(dto.tag.value[0] === "male"){
                return success();
            }else{
                return error();
            }
        }

        return success();
    }
});</code></pre>

    <h2><a href="#validation-example" id="validation-example" class="anchor"></a>Example using both validation strategies</h2>
    <div class="row cfdoc-example-row">
    	<div class="col-md-12 col-lg-6">
            <p>Simple questions about Sherlock Holmes.</p>
    		
            <p>The form:</p>
            <form id="form">

                <fieldset cf-questions="What is sherlock holmes gender?">
                    <label for="male">Male</label>
                    <input type="radio" name="gender" id="male" value="male"><br>

                    <label for="female">Female</label>
                    <input type="radio" name="gender" id="female" value="female"><br>

                    <label for="hen">Hen</label>
                    <input type="radio" name="gender" id="hen" value="hen"><br><br>
                </fieldset>

                <label for="firstname">
                    What is sherlocks holmes firstname?
                </label>

                <input 
                    id="firstname"
                    name="firstname"
                    required 
                    cf-error="Check flowStepCallback for hints"
                    />

                <input
                    type="text"
                    id="billing:firstname"
                    name="lastname"

                    cf-validation="window.lastnameCheck"
                    cf-questions="Put on the Sherlock Holmes hat to get past this step, and look at the custom validation method window.lastnameCheck"
                    cf-error="This value goes through the window.javascript method called lastnameCheck, check that for guide.."
                    />
            
            </form>

    	</div>
    	<div class="col-md-12 col-lg-6 cfdoc-example">
    		<div id="cf-context" role="cf-context" cf-context></div>
    	</div>

        <script>
            var lastnameCheck = function(dto, success, error){
                console.log("testValidation, dto:", dto, success, error);
                if(dto.text.toLowerCase().indexOf("holmes") != -1)
                    return success();
                return error();
            };

            window.onload = function(){
                var conversationalForm = window.cf.ConversationalForm.startTheConversation({
                    formEl: document.getElementById("form"),
                    context: document.getElementById("cf-context"),
                    flowStepCallback: function(dto, success, error){
                        
                        if(dto.tag.id == "firstname"){
                            if(dto.tag.value.toLowerCase() === "sherlock"){
                                return success();
                            }else{
                                return error();
                            }
                            //conversationalForm.stop("Stopping form, but added value");
                        }else if(dto.tag.name == "gender"){
                            if(dto.tag.value[0] === "male"){
                                return success();
                            }else{
                                return error();
                            }
                        }

                        return success();
                    },
                    submitCallback: function(){
                        // remove Conversational Form

                        alert("Custom submit callback reached, removing Conversational Form, see markup of this file")
                    }
                });
            };
        </script>

    </div>

{% endblock %}
